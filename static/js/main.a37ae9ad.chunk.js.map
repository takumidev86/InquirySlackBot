{"version":3,"sources":["components/AnswersList.jsx","components/Answer.jsx","components/Chats.jsx","assets/img/no-profile.png","assets/img/takumi.jpeg","components/Chat.jsx","components/Forms/TextInput.jsx","components/Forms/FormDialog.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["AnswersList","props","className","answers","map","key","index","answer","select","toString","useStyles","makeStyles","createStyles","borderColor","color","fontWeight","marginBottom","backgroundColor","Answer","classes","Button","button","variant","onClick","content","nextId","height","padding","overflow","Chats","List","chats","id","chat","text","type","Chat","isQuestion","ListItem","ListItemAvatar","Avatar","alt","src","Takumi","Noprofile","TextInput","TextField","fullWidth","label","margin","multiline","rows","value","onChange","FromDialog","inputName","event","setState","name","target","inputEmail","email","inputDescription","description","submitForm","state","payload","Date","toLocaleString","fetch","method","body","JSON","stringify","then","alert","handleClose","bind","Dialog","open","this","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","React","Component","App","initAnswer","initAnswers","dataset","currentId","displayNextQuestion","nextQuestionId","push","question","selectAnswer","selectedAnswer","setTimeout","test","a","document","createElement","href","click","handleClickOpen","defaultDataset","scrollArea","getElementById","scrollTop","scrollHeight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a37ae9ad.chunk.js","sourcesContent":["// import React from 'react'\n// import { Answer } from \"./index\"\n\n// const AnswersList = (props) => {\n//     return (\n//         <div className=\"c-grid_answer\" >\n//             {props.answers.map((value, index) => {\n//                 return <Answer content={value.content} nextId={value.nextId} key={index.toString()} select={props.select} />\n//             })}\n\n//         </div>\n//     )\n// }\n\n// export default AnswersList\n\n\nimport React from 'react';\nimport {Answer} from './index'\n\nconst AnswersList = (props) => {\n    return (\n        <div className=\"c-grid__answer\">\n            {props.answers.map((key, index) => {\n                return <Answer answer={props.answers[index]} key={index.toString()} select={props.select} />\n            })}\n        </div>\n    );\n};\n\nexport default AnswersList;","\nimport React from 'react';\nimport { makeStyles, createStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        \"button\": {\n            borderColor: \"#00CC66\",\n            color: \"#00CC66\",\n            fontWeight: 600,\n            marginBottom: \"8px\",\n            \"&:hover\": {\n                backgroundColor: \"#00CC66\",\n                color: \"#fff\"\n            }\n        }\n    }),\n);\n\nconst Answer = (props) => {\n    const classes = useStyles();\n\n    return (\n        <Button className={classes.button} variant=\"outlined\"\n                onClick={() => props.select(props.answer.content, props.answer.nextId)}>\n            {props.answer.content}\n        </Button>\n    );\n};\n\nexport default Answer;\n","import React from 'react'\nimport { makeStyles,createStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport {Chat} from \"./index\"\n\n\nconst useStyles = makeStyles(() => (\n    createStyles({\n        \"chats\":{\n            height: 400,\n            padding: '0',\n            overflow: 'auto'\n        }\n    })\n\n));\n\n\n\nconst Chats = (props) => {\n    const classes = useStyles();\n    return(\n        <List className={classes.chats} id={\"scroll-area\"}>\n            {props.chats.map((chat,index) => {\n                return <Chat text={chat.text} type={chat.type} key={index.toString()}/>\n                })}\n                </List>\n    )\n\n}\n\nexport default Chats","export default __webpack_public_path__ + \"static/media/no-profile.67b6df19.png\";","export default __webpack_public_path__ + \"static/media/takumi.4379ef04.jpeg\";","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Noprofile from '../assets/img/no-profile.png'\nimport Takumi from '..//assets/img/takumi.jpeg'\n\n\nconst Chat = (props) => {\n    const isQuestion = (props.type === 'question');\n    const classes = isQuestion ? 'p-chat__row' : 'p-chat__reverse';\n\n    return(\n        <ListItem className={classes} >\n        <ListItemAvatar>\n            {isQuestion ? (\n                <Avatar alt=\"icon\" src={Takumi} />\n            ) : (\n                <Avatar alt=\"icon\" src={Noprofile} />\n            )}\n            \n        </ListItemAvatar>\n\n        <div className=\"p-chat__bubble\">\n            {props.text}\n        </div>\n        </ListItem>\n    );\n\n}\n\n\n\nexport default Chat","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst TextInput= (props)=>{\n    return(\n        <TextField \n        fullWidth={true}\n        label={props.label}\n        margin={\"dense\"}\n        multiline={props.multiline}\n        rows={props.rows}\n        value={props.value}\n        type={props.type}\n        onChange={props.onChange}\n        />\n    )\n}\n\nexport default TextInput","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextInput from './TextInput';\nimport { textAlign } from '@material-ui/system';\n\nexport default class FromDialog extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            name:\"\",\n            email: '',\n            description: ''\n        }\n        this.inputName =this.inputName.bind(this)\n        this.inputEmail=this.inputEmail.bind(this)\n        this.inputDescription=this.inputDescription.bind(this)\n    }\n\n    inputName = (event) =>{\n        this.setState({name:event.target.value})\n    }\n\n    inputEmail = (event) =>{\n        this.setState({email:event.target.value})\n    }\n\n    inputDescription = (event) =>{\n        this.setState({description:event.target.value})\n    }\n\n    submitForm=()=>{\n        const name = this.state.name\n        const email = this.state.email\n        const description =this.state.description\n        const date1 = new Date();\n\n        const payload={\n            text:\"お問い合わせがありました\\n\" +\n                '時刻：' + date1.toLocaleString() +'\\n' +\n                'お名前：'+ name+ '\\n' +\n                'Email：' + '\\n' +\n                '問い合わせ内容：\\n' + description \n        }\n\n        const url='https://hooks.slack.com/services/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'\n\n        fetch(url,{\n            method:'POST',\n            body:JSON.stringify(payload)\n        }).then(()=>{\n            alert('送信が完了しました、追って連絡します！')\n            this.setState({\n                name: \"\",\n                email: \"\",\n                description:\"\"\n                }\n            )\n            return this.props.handleClose()\n        })\n    }\n\n\n\n    render(){\n        return(\n        <Dialog\n        open={this.props.open}\n        onClose={this.props.handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">お問い合わせフォーム</DialogTitle>\n            <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <TextInput\n                        label={\"お名前（必須）\"} multiline={false} rows={1}\n                        value={this.state.name} type={\"text\"} onChange={this.inputName}\n                        />\n                        <TextInput\n                        label={\"Email（必須）\"} multiline={false} rows={1}\n                        value={this.state.email} type={\"email\"} onChange={this.inputEmail}\n                        />\n                        <TextInput\n                        label={\"お問い合わせ内容（必須）\"} multiline={true} rows={5}\n                        value={this.state.description} type={\"text\"} onChange={this.inputDescription}\n                        />\n                        </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.props.handleClose} color=\"primary\">\n                                キャンセル\n                            </Button>\n                            <Button onClick={this.submitForm} color=\"primary\" autoFocus>\n                                送信する\n                                </Button>\n                        </DialogActions>\n      </Dialog>\n\n        )\n    }\n}","import React from 'react';\nimport defaultDataset from \"./dataset\"\nimport './assets/styles/style.css'\nimport {AnswersList,Chats} from \"./components/index\"\nimport FormDialog from './components/Forms/FormDialog'\n\nexport default class App extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            answers: [],\n            chats: [],\n            currentId: \"init\",\n            dataset: defaultDataset,    //連想配列\n            open: false\n        };\n        this.selectAnswer = this.selectAnswer.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n    initAnswer = () =>{\n        const initDataset = this.state.dataset[this.state.currentId];\n        const initAnswers = initDataset.answers;\n        this.setState({\n            answers: initAnswers\n        })\n    }\n\n    displayNextQuestion = (nextQuestionId) =>{\n        const chats = this.state.chats\n        chats.push({\n            text: this.state.dataset[nextQuestionId].question,\n            type: 'question'\n        })\n\n        this.setState({\n            answers: this.state.dataset[nextQuestionId].answers,\n            chat: chats,\n            currentId: nextQuestionId\n        })\n    }\n// 回答を選択する\n    selectAnswer = (selectedAnswer,nextQuestionId) =>{\n        switch(true){\n            case (nextQuestionId ==='init'):\n                setTimeout(() => this.displayNextQuestion(nextQuestionId),500);\n            case(/^https:*/.test(nextQuestionId)):\n                const a = document.createElement('a');\n                a.href = nextQuestionId;\n                a.target = '_blank';\n                a.click();\n                break;\n            case(nextQuestionId ==='contact'):\n                this.handleClickOpen();\n                break;\n            default:\n                const chats = this.state.chats;\n                chats.push({\n                    text: selectedAnswer,\n                    type: 'answer'\n                })\n                this.setState({\n                    chats: chats\n                })\n\n                setTimeout( () => this.displayNextQuestion(nextQuestionId),500);\n                break;\n        }\n    }\n    \n    handleClickOpen = () => {\n        this.setState({open:true});\n    };\n    handleClose = () => {\n        this.setState({open:false});\n    };\n\n    componentDidMount(){\n        const initAnswer = \"\";\n        this.selectAnswer(initAnswer,this.state.currentId)\n    }\n        componentDidUpdate(){\n            const scrollArea = document.getElementById('scroll-area')\n            if(scrollArea){\n                scrollArea.scrollTop = scrollArea.scrollHeight\n\n            }\n\n    }\n\n    render(){\n        return (\n        <section className=\"c-section\">\n            <div className=\"c-box\">\n                <Chats chats={this.state.chats} />\n                <AnswersList answers={this.state.answers} select={this.selectAnswer}/>\n                <FormDialog open={this.state.open} handleClose={this.handleClose} />\n            \n\n            </div>\n        </section>\n\n  );\n}\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}